local TREE_IMAGES = {
	left = "left_tree",
	middle = "middle_tree",
	right = "right_tree"
}

local SKY_IMAGES = {
	left = "left_sky",
	middle = "middle_sky",
	right = "right_sky"
}

local parallax_speed = 0.2

function rotate_img_map(direction, map)
	if direction == 1 then
		-- Rotate to the right
		map.left, map.middle, map.right = map.middle, map.right, map.left
	elseif direction == -1 then
		-- Rotate to the left
		map.left, map.middle, map.right = map.right, map.left, map.middle
	end
end

-- Make sure no matter where player spawns, we know exactly how to calculate rotation of background game object
local function render_on_player(self, pos)
	go.set_position(vmath.vector3(self.player_pos.x, self.player_pos.y + 75, -0.1), "treeline")
	go.set_position(vmath.vector3(self.player_pos.x, self.player_pos.y + 100, -0.2), "skyline")
end

function init(self)
	self.img_width = go.get("middle_tree#sprite", "size.x")
	self.player_pos = go.get_position("/player/player#player")
	render_on_player(self, self.player_pos)

	-- Set players boundaries that it needs to cross before rotating background image
	self.max_left = self.player_pos.x - self.img_width / 2
	self.max_right = self.player_pos.x + self.img_width / 2
end

-- takes the farthest background image from the player and renders in the player move direction
local function rotate_image(self, IMG_MAP, dir, z_index)
	if dir == 1 then
		local rightmost_img = go.get_position(IMG_MAP.right)
		go.set_position(vmath.vector3(rightmost_img.x + self.img_width, rightmost_img.y, z_index), IMG_MAP.left)
		rotate_img_map(1, IMG_MAP)
	else
		local leftmost_img = go.get_position(IMG_MAP.left)
		go.set_position(vmath.vector3(leftmost_img.x - self.img_width, leftmost_img.y, z_index), IMG_MAP.right)
		rotate_img_map(-1, IMG_MAP)
	end
end

function update(self, dt)
	self.player_pos = go.get_position("/player/player#player")
	if self.player_pos.x < self.max_left then
		-- handle player move too far left
		self.max_right = self.max_left
		self.max_left = self.player_pos.x - self.img_width + 50
		rotate_image(self, TREE_IMAGES, -1, -0.1)
		rotate_image(self, SKY_IMAGES, -1, -0.2)
	elseif self.player_pos.x > self.max_right then
		-- handle player move too far right
		self.max_left = self.max_right
		self.max_right = self.player_pos.x + self.img_width - 50
		rotate_image(self, TREE_IMAGES, 1, -0.1)
		rotate_image(self, SKY_IMAGES, 1, -0.2)
	end
end

local function apply_parallax_effect(url, speed, dir)
	local p = go.get_position(url)
	p.x = p.x + speed * dir
	go.set_position(p, url)
end

function on_message(self, message_id, message, sender)
	if message_id == hash('move_background') then
		apply_parallax_effect("treeline", 0.1, message.direction)
		apply_parallax_effect("skyline", 0.2, message.direction)
		apply_parallax_effect("underground", 0.2, message.direction)
	end
end
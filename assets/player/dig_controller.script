local rendercam = require "rendercam.rendercam"
local state = require "main.state.game"

local max_energy = state.game_state.get_state_property(state.StateEnum.Player.MaxEnergy)
local TILE_SIZE = state.game_state.get_state_property(state.StateEnum.Level.TileSize)
local TILE_TYPE = state.TileTypeEnum

local function get_key(x, y)
	return ("%d-%d"):format(x, y)
end

local function canRemoveTile(self, targetTileX, targetTileY)
	local playerPosition = go.get_position()
	local x = math.ceil(playerPosition.x / TILE_SIZE)
	local y = math.ceil(playerPosition.y / TILE_SIZE)
	if math.abs(x - targetTileX) > 1 or math.abs(y - targetTileY) > 1 then
		return false
	else
		return true
	end	
end

function update_tile_sprite(x, y)
	local tile = state.game_state[state.StateEnum.Level.Tiles][get_key(x , y)]
	if tile == nil or tile.id == nil then
		return
	end
	local new_sprite = state.get_sprite(x, y)
	tile.tile_sprite = new_sprite
	msg.post(tile.id, "update_tile_sprite", { sprite = new_sprite })
end

function on_input(self, action_id, action)
	if action_id == hash("interact") and action.pressed then
		local availableEnergy = state.game_state.get_state_property(state.StateEnum.Player.CurrentEnergy)
		local hoveredOverNode = state.game_state.get_state_property(state.StateEnum.Level.MouseOverTileHash)
		if availableEnergy <= 0 or hoveredOverNode == nil then
			return
		end
		local pos
		local isSuccess, result = pcall(go.get_position, hoveredOverNode)
		if isSuccess then
			pos = result
		else
			print("[Error]: hovered over tile has not been updated in time. This needs to be fixed. Issue https://trello.com/c/Gy7Dplcu/27-fix-have-to-clear-out-hovered-over-tile-in-the-main-state-when-it-has-been-mined-or-moved-out-from")
			return
		end			
		local x = pos.x / TILE_SIZE
		local y = pos.y / TILE_SIZE
		local key = get_key(x, y)
		if hoveredOverNode then
			local tile = state.game_state[state.StateEnum.Level.Tiles][key]
			local hitpoints = tile.hitpoints - 50
			tile.hitpoints = hitpoints
			if hitpoints <= 0 then
				--  empty tiles dont drop anything
				if state.game_state[state.StateEnum.Level.Tiles][key].tile_type == TILE_TYPE.IRON_ORE or state.game_state[state.StateEnum.Level.Tiles][key].tile_type == TILE_TYPE.GOLD_ORE then
					factory.create("/factory#ore_factory", pos, nil, { ore_type_id = state.game_state[state.StateEnum.Level.Tiles][key].tile_type })
				end
				state.game_state[state.StateEnum.Level.Tiles][key].tile_type = TILE_TYPE.EMPTY
				msg.post("/main#main", "delete_tile", { key = key})
				go.delete(state.game_state.get_state_property(state.StateEnum.Level.MouseOverTileHash))

				update_tile_sprite(x + 1, y)
				update_tile_sprite(x - 1, y)
				update_tile_sprite(x, y + 1)
				update_tile_sprite(x, y - 1)

			else
				update_tile_sprite(x, y)
			end
		end
	end
end
local state = require "main.state.game"

-- Map all ore type sprites here
local ore_types = {
	"/assets/resources/ore.sprite"
}

-- Create and initialize custom game object property
go.property("ore_type_id", 1)

local gravity = state.game_state.get_state_property(state.StateEnum.Physics.Gravity)
local initial_ore_drop_velocity = 100

function init(self)
	if self.properties then
		sprite.play_flipbook("#sprite", ore_types[self.ore_type_id])
	end
	
	self.velocity = vmath.vector3(0, 500, 0)
	self.first_render = true
	self.grounded = false
end

function update(self, dt)
	if not self.grounded then
		-- Apply gravity to the velocity if the object is not grounded
		self.velocity.y = self.velocity.y + gravity * dt

		-- Update the position of the game object
		local position = go.get_position()
		position = position + self.velocity * dt
		go.set_position(position)
	end
	self.grounded = false
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.group == hash("ground") then
			if not self.first_render then
				local newpos = go.get_position() + message.normal * message.distance
				go.set_position(newpos)
				self.velocity.y = 0
				self.grounded = true
			else
				self.first_render = false
			end
		end
	end
end
local state = require "main.state.game"
go.property("tile_type", 0)
go.property("tile_sprite", hash(""))
go.property("key", hash(""))

function init(self)
	go.set("#selected_overlay", "tint", vmath.vector4(1, 1, 1, 0))
	if self.tile_type ~= state.TileTypeEnum.EMPTY and self.tile_type ~= nil and self.tile_sprite ~= hash("") then
		sprite.play_flipbook("#sprite", self.tile_sprite)
	end
end

local function set_tint(opacity)
	tint = vmath.vector4(1, 1, 1, opacity)
	go.set("#selected_overlay", "tint", tint)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if message.other_group == hash("crosshair") then
			local tint = vmath.vector4(1, 1, 1, 0) -- default to no tint
			if message.enter then
				-- apply tint to tile thats hovered over
				tint = vmath.vector4(1, 1, 1, .3)
				state.game_state[state.StateEnum.Level.MouseOverTileHash] = go.get_id()
			elseif not message.enter and state.game_state[state.StateEnum.Level.MouseOverTileHash] == go.get_id() then
				-- Make sure we clear state only when the MouseOverTileHash is current GO
				-- Otherwise it may overwrite NEW MouseOverTileHash GO sicne onleave runs after NEW onenter
				state.game_state[state.StateEnum.Level.MouseOverTileHash] = nil
			end
			go.set("#selected_overlay", "tint", tint)
		end
	elseif message_id == hash("update_tile_sprite") then
		if message.sprite then
			sprite.play_flipbook("#sprite", message.sprite)
		end
	end
end
